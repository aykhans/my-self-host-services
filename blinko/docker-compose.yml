networks:
    blinko:
        external: false
    caddy:
        name: caddy
        driver: bridge
        external: true

services:
    blinko-website:
        image: blinkospace/blinko:latest
        container_name: blinko-website
        environment:
            NODE_ENV: production
            NEXTAUTH_SECRET: ${AUTH_SECRET}
            DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@blinko-postgres:5432/${POSTGRES_DB}
        depends_on:
            postgres:
                condition: service_healthy
        volumes:
            - ./data/app:/app/.blinko
        restart: unless-stopped
        logging:
            options:
                max-size: "10m"
                max-file: "3"
        healthcheck:
            test: ["CMD", "curl", "-f", "http://blinko-website:1111/"]
            interval: 30s
            timeout: 10s
            retries: 5
            start_period: 30s
        networks:
            - blinko
            - caddy

    postgres:
        image: postgres:14
        container_name: blinko-postgres
        restart: unless-stopped
        environment:
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        volumes:
            - ./data/db:/var/lib/postgresql/data
        healthcheck:
            test:
                [
                    "CMD",
                    "pg_isready",
                    "-U",
                    "${POSTGRES_USER}",
                    "-d",
                    "${POSTGRES_DB}",
                ]
            interval: 5s
            timeout: 10s
            retries: 5
        networks:
            - blinko
